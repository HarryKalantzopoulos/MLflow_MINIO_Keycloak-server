# configuration source https://github.com/minio/minio/blob/master/docs/orchestration/docker-compose/nginx.conf

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  5120;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;

    # include /etc/nginx/conf.d/*.conf;

    server {
        if ($host = domainkc.duckdns.org) {
            return 301 https://$host$request_uri;
        } 

        if ($host = domainmin.duckdns.org) {
            return 301 https://$host$request_uri;
        }

        if ($host = domainmlf.duckdns.org) {
            return 301 https://$host$request_uri;
        } 


        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        return 404;
    }

    server {
        listen       443 ssl;
        listen  [::]:443 ssl;

        server_name  domainkc.duckdns.org;

        ssl_certificate /etc/nginx/certs/faithkc/fullchain.pem;
        ssl_certificate_key  /etc/nginx/certs/faithkc/privkey.pem;

        # Support faster webpage delivery from server to browser
        http2 on;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass          http://keycloak-web:8080;
            proxy_http_version 1.1;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    Connection ‘upgrade’;
            proxy_set_header    Host    $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header    X-Real-IP          $remote_addr;
            proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto  $scheme;

            proxy_set_header    X-Forwarded-Host   $host;
            proxy_set_header    X-Forwarded-Server $host;
            proxy_set_header    X-Forwarded-Port   $server_port;
        }
    }

    server {
        listen       443 ssl;
        listen  [::]:443 ssl;

        server_name  domainmin.duckdns.org;

        ssl_certificate /etc/nginx/certs/faithminio/public.crt;
        ssl_certificate_key  /etc/nginx/certs/faithminio/private.key;

        # Support faster webpage delivery from server to browser
        http2 on;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # To allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;
        # To disable buffering
        proxy_buffering off;
        proxy_request_buffering off;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 300;
            # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            proxy_pass http://minio:9000;
        }

        location /minio/ui/ {
            rewrite ^/minio/ui/(.*) /$1 break;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;

            # This is necessary to pass the correct IP to be hashed
            real_ip_header X-Real-IP;

            proxy_connect_timeout 300;
            
            # To support websocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';

            # Some environments may encounter CORS errors (Kubernetes + Nginx Ingress)
            # Uncomment the following line to set the Origin request to an empty string
            # proxy_set_header Origin '';
            
            chunked_transfer_encoding off;

            proxy_pass http://minio:9001;
        }

        # Deals with wrong redirect after authorization from keycloak
        location /oauth_callback/ {
            rewrite ^/oauth_callback(.*)$ /minio/ui/oauth_callback$1 permanent;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;

            # This is necessary to pass the correct IP to be hashed
            real_ip_header X-Real-IP;

            proxy_connect_timeout 300;
            
            # To support websocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';

            # Some environments may encounter CORS errors (Kubernetes + Nginx Ingress)
            # Uncomment the following line to set the Origin request to an empty string
            # proxy_set_header Origin '';
            
            chunked_transfer_encoding off;

            proxy_pass http://minio:9001;
        }

    }

    server {
        listen 443 ssl;
        listen  [::]:443 ssl;

        server_name domainmlf.duckdns.org;
        # Support faster webpage delivery from server to browser
        http2 on;

        ssl_certificate /etc/nginx/certs/faithmlflow/fullchain.pem;
        ssl_certificate_key  /etc/nginx/certs/faithmlflow/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://mlflow:5000;

            proxy_read_timeout 1800;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

        }
    }
}
